'use strict';

var Layout = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"page"},[_vm._t("header"),_vm._v(" "),_c('div',{staticClass:"page-wrapper"},[_c('div',{staticClass:"page-body"},[_vm._t("body")],2)])],2)},
staticRenderFns: [],
  name: "Layout",
};

var LoginLayout = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"page page-center"})},
staticRenderFns: [],
  name: "LoginLayout",
};

var HeaderNavigation = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:"navbar navbar-expand-sm navbar-light d-print-none"},[_c('div',{staticClass:"container-xl"},[(_vm.navItems.length > 0)?_c('button',{staticClass:"navbar-toggler",attrs:{"type":"button","aria-expanded":_vm.navbarToggle},on:{"click":function($event){$event.preventDefault();_vm.navbarToggle = !_vm.navbarToggle;}}},[_c('span',{staticClass:"navbar-toggler-icon"})]):_vm._e(),_vm._v(" "),_c('h1',{staticClass:"navbar-brand navbar-brand-autodark d-none-navbar-horizontal pe-0 pe-md-3"},[_vm._t("logo")],2),_vm._v(" "),_c('div',{staticClass:"navbar-nav flex-row order-md-last"},[_vm._t("last-item")],2),_vm._v(" "),(_vm.navItems.length > 0)?_c('div',{staticClass:"collapse navbar-collapse",class:{ show: _vm.navbarToggle }},[_c('div',{staticClass:"d-flex flex-column flex-md-row flex-fill align-items-stretch align-items-md-center"},[_c('ul',{staticClass:"navbar-nav"},_vm._l((_vm.navItems),function(navItem,index){return _c('router-link',{key:index,attrs:{"to":{ name: navItem.to },"custom":""},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var isActive = ref.isActive;
var isExactActive = ref.isExactActive;
return [_c('li',{staticClass:"nav-item",class:{ active: isActive && isExactActive }},[_c('a',{staticClass:"nav-link",attrs:{"href":"#"},on:{"click":function($event){$event.preventDefault();return _vm.routePush(navItem)}}},[_c('span',{staticClass:"nav-link-title"},[_vm._v(_vm._s(navItem.title))])])])]}}],null,true)})}),1)])]):_vm._e()])])},
staticRenderFns: [],
  name: "HeaderNavigation",
  props: {
    navItems: {
      type: Array,
    },
  },
  data() {
    return {
      navbarToggle: false,
    };
  },
  methods: {
    routePush(navItem) {
      if (this.$route.name != navItem.to) {
        this.$router.push({ name: navItem.to });
        this.navbarToggle = false;
      }
    },
  },
};

var Container = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-xl"},[_vm._t("default")],2)},
staticRenderFns: [],
  name: "Container",
};

var Row = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_vm._t("default")],2)},
staticRenderFns: [],
  name: "Row",
};

var Col = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.rootClass},[_vm._t("default")],2)},
staticRenderFns: [],
  name: "Col",
  props: {
    lg: {
      type: String,
      required: false,
      default: "4",
    },
    md: {
      type: String,
      required: false,
      default: "6",
    },
    sm: {
      type: String,
      required: false,
      default: "9",
    },
    xs: {
      type: String,
      required: false,
      default: "12",
    },
  },
  computed: {
    rootClass() {
      return `col-xs-${this.xs} col-sm-${this.sm} col-md-${this.md} col-lg-${this.lg}`;
    },
  },
};

var Card = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"card"},[(_vm.headerImage)?_c('div',{staticClass:"img-responsive img-responsive-21x9 card-img-top",style:(("background-image: url(" + _vm.headerImage + ")"))}):_vm._e(),_vm._v(" "),(_vm.title)?_c('div',{staticClass:"card-header"},[_c('h3',{staticClass:"card-title"},[_vm._v(_vm._s(_vm.title))])]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"card-body"},[_vm._t("default")],2)])},
staticRenderFns: [],
  name: "Card",
  props: {
    title: {
      type: String | Boolean,
      default: false,
    },
    headerImage: {
      type: String | Boolean,
      default: false,
    },
  },
};

var Button = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:"btn",class:_vm.rootClass,on:{"click":function($event){$event.preventDefault();return _vm.clickHandler.apply(null, arguments)}}},[_vm._v("\n  "+_vm._s(_vm.text)+"\n")])},
staticRenderFns: [],
  name: "Button",
  props: {
    text: {
      type: String,
      required: true,
      default: "Button",
    },
    color: {
      type: String | Boolean,
      default: false,
    },
    ghost: {
      type: Boolean,
      default: false,
    },
    outline: {
      type: Boolean,
      default: false,
    },
    square: {
      type: Boolean,
      default: false,
    },
    rounded: {
      type: Boolean,
      default: false,
    },
    size: {
      type: String | Boolean,
      default: false,
    },
    isLoading: {
      type: Boolean,
      default: false,
    },
  },
  computed: {
    rootClass() {
      let classList = [];

      if (this.square) classList.push("btn-square");
      if (this.rounded) classList.push("btn-pill");
      if (this.size) classList.push(`btn-${this.size}`);
      if (this.isLoading) classList.push("btn-loading");

      if (this.color) {
        if (this.ghost) {
          classList.push(`btn-ghost-${this.color}`);
        } else if (this.outline) {
          classList.push(`btn-outline-${this.color}`);
        } else {
          classList.push(`btn-${this.color}`);
        }
      }

      return classList.join(" ");
    },
  },
  methods: {
    clickHandler() {
      if (!this.isLoading) this.$emit("click");
    },
  },
};

var ButtonList = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"btn-list"},[_vm._t("default")],2)},
staticRenderFns: [],
  name: "ButtonList",
};

var FloatInputText = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"form-floating"},[_c('input',{staticClass:"form-control",class:{ 'is-invalid': _vm.invalid, 'is-valid': _vm.valid },attrs:{"type":"text"},domProps:{"value":_vm.value},on:{"input":_vm.onInput}}),_vm._v(" "),_c('label',{attrs:{"for":"floating-input"}},[_vm._v(_vm._s(_vm.title))]),_vm._v(" "),(_vm.message)?_c('div',{staticClass:"invalid-feedback"},[_vm._v("message")]):_vm._e()])},
staticRenderFns: [],
  name: "FloatInputText",
  props: {
    title: {
      type: String,
      required: true,
    },
    value: {},
    message: {
      type: String | null,
    },
    invalid: {
      type: Boolean,
      default: () => false,
    },
    valid: {
      type: Boolean,
      default: () => false,
    },
  },
  methods: {
    onInput(event) {
      this.$emit("input", event.target.value);
    },
  },
};

var FloatInputEmail = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"form-floating"},[_c('input',{staticClass:"form-control",class:{ 'is-invalid': _vm.invalid, 'is-valid': _vm.valid },attrs:{"type":"email"},domProps:{"value":_vm.value},on:{"input":_vm.onInput}}),_vm._v(" "),_c('label',{attrs:{"for":"floating-input"}},[_vm._v(_vm._s(_vm.title))]),_vm._v(" "),(_vm.message)?_c('div',{staticClass:"invalid-feedback"},[_vm._v("message")]):_vm._e()])},
staticRenderFns: [],
  name: "FloatInputEmail",
  props: {
    title: {
      type: String,
      required: true,
    },
    value: {},
    message: {
      type: String | null,
    },
    invalid: {
      type: Boolean,
      default: () => false,
    },
    valid: {
      type: Boolean,
      default: () => false,
    },
  },
  methods: {
    onInput(event) {
      this.$emit("input", event.target.value);
    },
  },
};

var FloatInputPassword = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"form-floating"},[_c('input',{staticClass:"form-control",class:{ 'is-invalid': _vm.invalid, 'is-valid': _vm.valid },attrs:{"type":"password","autocomplete":"off"},domProps:{"value":_vm.value},on:{"input":_vm.onInput}}),_vm._v(" "),_c('label',{attrs:{"for":"floating-input"}},[_vm._v(_vm._s(_vm.title))]),_vm._v(" "),(_vm.message)?_c('div',{staticClass:"invalid-feedback"},[_vm._v("message")]):_vm._e()])},
staticRenderFns: [],
  name: "FloatInputPassword",
  props: {
    title: {
      type: String,
      required: true,
    },
    value: {},
    message: {
      type: String | null,
    },
    invalid: {
      type: Boolean,
      default: () => false,
    },
    valid: {
      type: Boolean,
      default: () => false,
    },
  },
  methods: {
    onInput(event) {
      this.$emit("input", event.target.value);
    },
  },
};

var ToggleSwitch = {
render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{staticClass:"form-check form-switch"},[_c('input',{staticClass:"form-check-input",class:{ 'is-invalid': _vm.invalid, 'is-valid': _vm.valid },attrs:{"type":"checkbox"},domProps:{"checked":_vm.value,"value":_vm.inputValue},on:{"input":_vm.onInput}}),_vm._v(" "),_c('span',{staticClass:"form-check-label"},[_vm._v(_vm._s(_vm.title))])])},
staticRenderFns: [],
  name: "ToggleSwitch",
  props: {
    title: {
      type: String,
      required: true,
    },
    value: {},
    invalid: {
      type: Boolean,
      default: () => false,
    },
    valid: {
      type: Boolean,
      default: () => false,
    },
  },
  data() {
    return {
      inputValue: false,
    };
  },
  created() {
    this.inputValue = this.value;
  },
  methods: {
    onInput(event) {
      this.inputValue = !this.inputValue;
      this.$emit("input", this.inputValue);
    },
  },
};

var components = {
  Layout,
  LoginLayout,
  HeaderNavigation,

  Container,
  Row,
  Col,

  Card,
  Button,
  ButtonList,

  FloatInputText,
  FloatInputEmail,
  FloatInputPassword,

  ToggleSwitch,
};

const VueTablerUI = {
  install: function (Vue) {
    for (let component in components) {
      Vue.component(components[component].name, components[component]);
    }
  },
};

if (document.querySelector("head")) {
  document.querySelector("head").appendChild(
    Object.assign(document.createElement("link"), {
      rel: "stylesheet",
      href: "https://cdn.jsdelivr.net/npm/@tabler/core@1.0.0-beta17/dist/css/tabler.min.css",
    })
  );
}

module.exports = VueTablerUI;
